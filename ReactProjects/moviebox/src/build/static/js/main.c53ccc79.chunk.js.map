{"version":3,"sources":["Components/SearchBar.js","Components/MovieList.js","Components/AddMovie.js","Components/EditMovie.js","Components/App.js","index.js"],"names":["SearchBar","handleFormSubmit","event","preventDefault","onSubmit","this","className","onChange","props","searchMovieProp","type","placeholder","to","style","float","React","Component","MovieList","movies","map","movie","i","src","imageURL","alt","name","string","overview","maxLength","length","substring","onClick","deleteMovieProp","id","rating","Addmovie","e","newMovie","serialize","target","hash","onAddMovie","disabled","htmlFor","rows","value","EditMovie","state","onInputChange","setState","match","params","updatedMovie","onEditMovie","history","push","a","axios","get","response","data","App","searchQuery","deleteMovie","delete","newMovieList","filter","m","searchMovie","addMovie","post","concat","getMovies","editMovie","put","filteredMovies","toLowerCase","indexOf","sort","b","path","exact","render","Fragment","AddMovie","ReactDom","document","getElementById"],"mappings":"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","file":"static/js/main.c53ccc79.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";  //link gidilmesini istediğimiz sayfa\r\n\r\nclass SearchBar extends React.Component {\r\n\r\n    //onSubmit için event handler\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault(); //event in varsayılan davranışını durdurur\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleFormSubmit}>\r\n                <div className=\"form-row mb-5\" >\r\n                    <div className=\"col-12\">\r\n                        <div className=\"col-10\">\r\n                            <input\r\n                                onChange={this.props.searchMovieProp}\r\n                                type=\"text\" className=\"form-control\"\r\n                                placeholder=\"Search a movie\">\r\n                            </input>\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                            <Link to=\"/add\" //Add Movie butonuna tıkladığımızda AddMovie.js deki forma yönlendirir\r\n                                type=\"button\"\r\n                                className=\"btn btn-md btn-danger\"\r\n                                style={{ float: 'right' }}>Add Movie\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default SearchBar;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst MovieList = (props) => {\r\n\r\n    // 1-)event-handler\r\n    // function handleClick(event) {\r\n    //     console.log(event.pageY)\r\n    // }\r\n    //2-)ya da js expression şeklinde yazılabilir\r\n    //onClick={(event) => console.log(event.pageY)}\r\n\r\n\r\n    //truncate fonk\r\n    const truncateOverview = (string, maxLength) => {\r\n        if (!string) return null;\r\n        if (string.length <= maxLength) return string;\r\n        return `${string.substring(0, maxLength)} ...`; //substring methodu ile açıklamayı kısaltırız\r\n    }\r\n\r\n    //{truncateOverview(movie.overview, 50)} 50 karakterden sonra keser tranceteOverwiew fonksiyonunu uygular\r\n    return (\r\n        <div className=\"row\" >\r\n\r\n            {props.movies.map((movie, i) => ( //i eklenen movie nin id sini temsil eder bulunan id lerden farklı olmasını sağlar\r\n\r\n                <div className=\"col-lg-4 key\" key={i}>\r\n                    <div className=\"card mb-4 shadow-sm\">\r\n                        <img src={movie.imageURL} className=\"card-img-top\" alt=\"Sample Movie\" />\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{movie.name}</h5>\r\n                            < p className=\"card-text\">{truncateOverview(movie.overview, 100)}</p>\r\n                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <button type=\"button\" onClick={(event) => props.deleteMovieProp(movie)} className=\"btn btn-md btn-outline-danger\">Delete</button>\r\n                                <Link\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-md btn-outline-primary\"\r\n                                    to={`edit/${movie.id}`}\r\n                                >Edit </Link>\r\n                                <h2><span className=\"badge badge-info\">{movie.rating}</span></h2>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            ))}\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default MovieList;","import React from \"react\";\r\nimport serialize from \"form-serialize\";\r\n\r\nclass Addmovie extends React.Component {\r\n\r\n\r\n    handleFormSubmit = (e) => {\r\n        e.preventDefault(); //sayfayı refresh etmesini engeller\r\n        const newMovie = serialize(e.target, { hash: true }); //newMovie obje olarak\r\n        this.props.onAddMovie(newMovie); //newMovie App.js in props u olarak gönderilir. //onAddMovie props un adı\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"mt-5\" onSubmit={this.handleFormSubmit}>\r\n                    <input className=\"form-control\" id=\"disabledInput\" type=\"text\" placeholder=\"Fill The Form To Add A Movie..\" disabled />\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-10\">\r\n                            <label htmlFor=\"inputName\">Name</label>\r\n                            <input type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"name\" />\r\n                        </div>\r\n                        <div className=\"form-group col-md-2\">\r\n                            <label htmlFor=\"inputRating\">Rating</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"rating\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-12\">\r\n                            <label htmlFor=\"inputImage\">Image URL</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"imageURL\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-12\">\r\n                            <label htmlFor=\"overviewTextarea\">Overview</label>\r\n                            <textarea\r\n                                className=\"form-control\"\r\n                                name=\"overview\" rows=\"5\"></textarea>\r\n                        </div>\r\n                    </div>\r\n                    <input type=\"submit\" className=\"btn btn-danger btn-block\" value=\"Add Movie\" />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Addmovie;","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass EditMovie extends React.Component {\r\n\r\n    state = { //objenin özellikleri\r\n        name: \"\",\r\n        rating: \"\",\r\n        overview: \"\",\r\n        imageURL: \"\"\r\n    }\r\n\r\n    //Edit kısmında bilgilerin gelmesi için\r\n    async componentDidMount() {\r\n        const id = this.props.match.params.id; //id match\r\n        const response = await axios.get(`http://localhost:3002/movies/${id}`) //jsx kullanırız çünkü belirli bir id talep edilecek\r\n        const movie = response.data;  //response dan gelen bilgiler movie ye aktarıldı\r\n        this.setState({\r\n            name: movie.name,\r\n            rating: movie.rating,\r\n            overview: movie.overview,\r\n            imageURL: movie.imageURL\r\n        })\r\n    }\r\n\r\n    //event handler- edit kısmında değişiklik yapıldığında değişiklikleri yazar\r\n    onInputChange = (e) => {\r\n\r\n\r\n        //bracket notation []:\r\n        this.setState({\r\n            [e.target.name]: e.target.value //hedefte değişen özellikleri value olarak aktarır\r\n        })\r\n\r\n    }\r\n\r\n\r\n    handleFormSubmit = (e) => {\r\n        e.preventDefault(); //sayfayı refresh etmesini engeller\r\n\r\n        //object restrictions\r\n        const { name, rating, overview, imageURL } = this.state;\r\n\r\n        const id = this.props.match.params.id;\r\n\r\n        //yeni değerlerle oluşturulmuş movie nesnesi\r\n        const updatedMovie = {\r\n            name,\r\n            rating,\r\n            overview,\r\n            imageURL\r\n        }\r\n\r\n        this.props.onEditMovie(id, updatedMovie);\r\n        this.props.history.push(\"/\"); //Edit butonuna basılınca ana sayfaya gider\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"mt-5\" onSubmit={this.handleFormSubmit}>\r\n                    <input className=\"form-control\" id=\"disabledInput\" type=\"text\" placeholder=\"Edit the form for update..\" disabled />\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-10\">\r\n                            <label htmlFor=\"inputName\">Name</label>\r\n                            <input type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"name\"\r\n                                value={this.state.name}\r\n                                onChange={this.onInputChange} />\r\n                        </div>\r\n                        <div className=\"form-group col-md-2\">\r\n                            <label htmlFor=\"inputRating\">Rating</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"rating\"\r\n                                value={this.state.rating}\r\n                                onChange={this.onInputChange} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-12\">\r\n                            <label htmlFor=\"inputImage\">Image URL</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"imageURL\"\r\n                                value={this.state.rating}\r\n                                onChange={this.onInputChange} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-12\">\r\n                            <label htmlFor=\"overviewTextarea\">Overview</label>\r\n                            <textarea\r\n                                className=\"form-control\"\r\n                                name=\"overview\"\r\n                                rows=\"5\"\r\n                                value={this.state.overview}\r\n                                onChange={this.onInputChange}></textarea>\r\n                        </div>\r\n                    </div>\r\n                    <input type=\"submit\" className=\"btn btn-warning btn-block\" value=\"Edit Movie\" />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditMovie;","import React from \"react\";\r\nimport SearchBar from \"./SearchBar\"; //componentleri import et\r\nimport MovieList from \"./MovieList\";\r\nimport AddMovie from \"./AddMovie\";\r\nimport EditMovie from \"./EditMovie\";\r\nimport axios from \"axios\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\"; //Routing\r\n\r\nclass App extends React.Component {\r\n\r\n    //state bir obje(= kullanılır)\r\n    state = {\r\n\r\n        //movies property (: kullanılır)\r\n        //movies array - array objelerden oluşuyor\r\n        movies: [],\r\n        //searchQuery state in property si\r\n        searchQuery: \"\" //input alanı\r\n    }\r\n\r\n    //**FETCH \r\n    //render ı sadece sayfanın içeriğini göstermek için kullanmayı tercih ederiz\r\n    //bu yüzden http isteklerini componentDidMount() içerisine yazarız. fetch fonksiyonunu kullanarak verileri alırız\r\n    //fetch asekron function -promise döndürür- asekron olması için await fetch ve async yazarız\r\n    // async componentDidMount() {\r\n    //     const baseURL = \"http://localhost:3002/movies\";\r\n    //     const response = await fetch(baseURL);\r\n    //     console.log(response);\r\n    //     const data = await response.json();\r\n    //     console.log(data);\r\n    //     this.setState({ movies: data }) //data dan gelen bilgileri setState methodu ile  state içindeki movies e atarız\r\n    // }\r\n\r\n    //**AXIOS - http istekleri yapmak için promise tabanlı kütüphane fetch de 2 aşama axios tek aşama\r\n    async componentDidMount() {\r\n        this.getMovies();\r\n    }\r\n\r\n    //filmler güncellendikten sonra refresh etmeden ana sayfaya aktarması için\r\n    async getMovies() {\r\n        const response = await axios.get(\"http://localhost:3002/movies\");\r\n        this.setState({ movies: response.data }) //data response içinde\r\n    }\r\n\r\n\r\n\r\n\r\n    // //id ye göre filmleri filtrelemek için deletemovie fonk kullanılır\r\n    // deleteMovie = (movie) => {\r\n    //     const newMovieList = this.state.movies.filter(\r\n    //         m => m.id !== movie.id\r\n    //     );\r\n\r\n    //     //setState methodu ile movies ile newMovies i değiştiririz\r\n\r\n    //     //*movie listesi olmasaydı\r\n    //     // this.setState({\r\n    //     //     movies: newMovieList\r\n    //     // })\r\n\r\n    //     //*var olan movie listesi için state kullanmak daha mantıklı\r\n    //     this.setState(state => ({\r\n    //         movies: newMovieList\r\n    //     }))\r\n    // }\r\n\r\n    //**FETCH API delete\r\n\r\n    // deleteMovie = async (movie) => {\r\n\r\n    //     const baseURL = `http://localhost:3002/movies/${movie.id}`; //silme işleminin yapılacağı id belirleniyor //kalıcı siler\r\n    //     await fetch(baseURL, {\r\n    //         method: \"DELETE\"  //methodu belirtmeliyiz get varsayılan method ama delete değil\r\n    //     })\r\n\r\n    //     const newMovieList = this.state.movies.filter(\r\n    //         m => m.id !== movie.id\r\n    //     );\r\n\r\n    //     this.setState(state => ({\r\n    //         movies: newMovieList\r\n    //     }))\r\n    // }\r\n\r\n    //** AXIOS delete \r\n    //DELETE MOVIE\r\n    deleteMovie = async (movie) => {\r\n\r\n        axios.delete(`http://localhost:3002/movies/${movie.id}`); //kalıcı olarak siler\r\n\r\n        const newMovieList = this.state.movies.filter(\r\n            m => m.id !== movie.id\r\n        );\r\n\r\n        this.setState(state => ({\r\n            movies: newMovieList\r\n        }))\r\n    }\r\n\r\n    //SEARCH MOVIE\r\n    searchMovie = (event) => {\r\n        this.setState({ searchQuery: event.target.value }) //searchQuery input objesine, boş setState methodu ile event.taget.value ile girdiğimiz değeri searchQuery e atarız\r\n    }\r\n\r\n    //ADD MOVIE\r\n    addMovie = async (movie) => {\r\n        //post request kullanılır butonla ekleme yapılacak\r\n        await axios.post(`http://localhost:3002/movies/`, movie)\r\n        this.setState(state => ({\r\n            movies: state.movies.concat([movie])\r\n            //movies array concat methodu kullanılabilir. movie yi ekler\r\n        }))\r\n        this.getMovies();\r\n    }\r\n\r\n    //EDIT MOVIE\r\n    editMovie = async (id, updatedMovie) => {\r\n        //post request kullanılır butonla ekleme yapılacak\r\n        await axios.put(`http://localhost:3002/movies/${id}`, updatedMovie) //güncellenmiş halini put request\r\n        this.getMovies(); //sayfa refresh edilmeden güncellemeleri aktarmak için\r\n    }\r\n\r\n    render() {\r\n\r\n        //**filteredMovie girilen harfe göre filmleri filtreler\r\n        //** filtrelemede büyük küçük harften etkilenmemesi için toLowercase methodunu kullan\r\n        //**indexOf methosu aranan terimi geri dönderir yoksa -1 dönderir\r\n        let filteredMovies = this.state.movies.filter(\r\n            (movie) => {\r\n                return movie.name.toLowerCase().indexOf(this.state.searchQuery.toLowerCase()) !== -1\r\n            }\r\n        ).sort((a, b) => {  //sort method ile id si büyük olan listenin başına eklenir\r\n            return a.id < b.id ? 1 : a.id > b.id ? -1 : 0; //1->ikiniciyi getir ,-1->birinciyi getir,0 eşitlik durumu\r\n        });\r\n\r\n        return (\r\n            //router url değişimlerini inceler ve ilgili sayfaya yönlendirir\r\n            <Router>\r\n                <div className=\"container\">\r\n                    <Switch>\r\n                        <Route path=\"/\" exact render={() => (\r\n                            <React.Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12\">\r\n                                        <SearchBar\r\n                                            searchMovieProp={this.searchMovie} //SearchBar dan gelen searchMovieProp gelir\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <MovieList\r\n                                    movies={filteredMovies}\r\n                                    //deleteMovieProp sayesinde deleteMovie fonksiyonunu MovieList.js de kullanabiliriz\r\n                                    deleteMovieProp={this.deleteMovie}\r\n                                />\r\n                            </React.Fragment>\r\n                        )}>\r\n\r\n                        </Route>\r\n\r\n                        <Route path=\"/add\" exact render={({ history }) => (\r\n                            <AddMovie\r\n                                onAddMovie={(movie) => {\r\n                                    this.addMovie(movie)\r\n                                    history.push(\"/\")\r\n                                }} />\r\n                            //*history push ile eklediğimiz movie ana sayfadaki movie listesine eklenir\r\n                            //onAddMovie props AddMovie.js den gelen\r\n                            // aldığı movie yi addMovie fonksiyonuna parametre olarak gönderir\r\n                        )}>\r\n\r\n                        </Route>\r\n\r\n\r\n\r\n                        <Route path=\"/edit/:id\" render={(props) => (\r\n                            <EditMovie\r\n                                {...props}\r\n                                onEditMovie={(id, movie) => {\r\n                                    this.editMovie(id, movie)\r\n                                }} />\r\n                        )}>\r\n\r\n                        </Route>\r\n\r\n\r\n\r\n                    </Switch>\r\n\r\n                </div>\r\n            </Router >\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\n\r\nimport App from \"./Components/App\"; //componentleri import etmeliyiz\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';//Bootstrap import edilmeli\r\n\r\n\r\nReactDom.render(<App />, document.getElementById('root'))"],"sourceRoot":""}